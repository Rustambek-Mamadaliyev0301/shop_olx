<%- include("parts/header") %>
<% var category = category || [] %> 



<div class="content my-3  " style="padding:80px 0px;">
  <div class="container">
      <p id="receiver_id" class="visually-hidden">
          <%=  receiver._id %>
      </p>
<h2 class="text-center text-light">
 Xabarlar <%= receiver.name %>
</h2>


<ul
			id="messages"
			class="
				list-unstyled
				w-75
				mx-auto
				d-flex
				flex-column
				align-items-start
				border border-light border-3
				p-2
			"
			style="max-height: 70vh; overflow: auto"
		>
			<% for(let message of chats) {%> <%
			if(!(user._id.equals(message.owner_id)) ) {%>
			<li class="d-inline-block p-3 border border-2 border-success my-2">
				<p class="p-0 m-0 text-light"><%= message.message_text %></p>
			</li>
			<% } else { %>
			<li
				class="
					d-inline-block
					p-3
					border
					align-self-end
					border-2 border-primary
					my-2
				"
			>
				<p class="p-0 m-0 text-light"><%= message.message_text %></p>
			</li>
			<%} %> <% } %>
		</ul>

<form id="message_form" method="POST" class="w-75 mx-auto">

<textarea  id="text_area" name="message_text" class="form-control "></textarea>
<button class="btn w-100 mt-2 btn-outline-primary">
    Yuborish
</button>
</form>


   </div>
</div>

<script src="/socket/socket.io.js"></script>

<script>
const socket =io();
// console.log(document.cookie.replace("token=",""))
socket.emit("new_connection",{
	token:document.cookie.replace("token=",""),
});

// socket.on("connected",(data) =>{
// 	console.log(data);
// })


const form = document.querySelector("#message_form");
const text_area = document.querySelector("#text_area");
const messages = document.querySelector("#messages");
const receiver_id = document.querySelector("#receiver_id").innerText;

form.addEventListener("submit",async(event) =>{
	event.preventDefault();


	if(text_area.value.length >=2){
		let chat = await send_message(text_area.value);
		// console.log(chat);

		const element =`<li
				class="
					d-inline-block
					p-3
					border
					align-self-end
					border-2 border-primary
					my-2
				"
			>
				<p class="p-0 m-0 text-light">${text_area.value}</p>
			</li>`
	}

	messages.innerHTML += element;

	messages.scrollTop = messages.scrollHeight;
});

messages.scrollTop = messages.scrollHeight;


	// console.log(innerText);

async function send_message(message_text){
	socket.emit("send_message",{
		message_text,
		receiver_id:receiver_id,
	})
}


socket.on("new_message",(data) =>{
	// console.log(data);

	const element =`<li
				class="
					d-inline-block
					p-3
					border
				
					border-2 border-success
					my-2
				"
			>
				<p class="p-0 m-0 text-light">${data}</p>
			</li>`
			messages.innerHTML += element;

messages.scrollTop = messages.scrollHeight;
	


} )

// async function send_message(message_text){
// 	// console.log(message_text)
// 	let response = await fetch("",{
// 		method:"POST",
// 		headers:{
// 			"Content-Type": "application/json",
// 		},
// 		body:JSON.stringify({
// 			message_text:message_text,
			
// 		}),
// 	});

// 	response =  await response.json();
// 	return response;
// }


</script>


<%- include("parts/footer") %>